#include <iostream>
#include <vector>//allow to use vector data structure
#include <iomanip> // For formatting grid
using namespace std;

// Function to print the grid with formatting
void printGrid(vector<vector<int> > & grid) {
    cout << "+---+---+---+---+" << endl;//print border of grid
    for (int i = 0; i < 4; i++) {//for rows
        for (int j = 0; j < 4; j++) {  //for coulumns
            cout << "| ";  //for separating columns																																
            if (grid[i][j] == 0)
                cout << " "; // Empty cell
            else
                cout << grid[i][j];
            cout << " ";
        }
        cout << "|" << endl;//for columns
        cout << "+---+---+---+---+" << endl;// provides bottom border
    }
}

// Function to check if placing a number is valid
bool isValid(vector<vector<int> > &grid, int row, int col, int num) {
    for (int i = 0; i < 4; i++) {
        // Check row and column
        if (grid[row][i] == num || grid[i][col] == num)
            return false;
    }
    return true;
}

// Recursive function to solve the puzzle
bool solveGrid(vector<vector<int> > &grid) {
    for (int row = 0; row < 4; row++) {
        for (int col = 0; col < 4; col++){
            if (grid[row][col] == 0) { // Empty cell
                for (int num = 1; num <= 4; num++) {
                    if (isValid(grid, row, col, num)) {
                        grid[row][col] = num; // Place number
                        if (solveGrid(grid)) // Recursive call
                            return true;
                        grid[row][col] = 0; // Backtrack
                    }
                }
                return false; // No valid number found
            }
        }
    }
    return true; // Puzzle solved
}

// Main Function
int main() {
    // 4x4 puzzle grid initialized with empty cells (0)
    vector<vector<int> > grid(4, vector<int>(4, 0));

    // User inputs the initial puzzle
    cout << "Enter your 4x4 grid (use 0 for empty cells):\n";
    for (int i = 0; i < 4; i++) {
        cout << "Enter row " << i + 1 << " (4 numbers separated by spaces): ";
        for (int j = 0; j < 4; j++) {
            cin >> grid[i][j];
        }
    }

    // Display the initial puzzle
    cout << "\nInitial Puzzle:\n";
    printGrid(grid);

    // Solve the puzzle
    if (solveGrid(grid)) {
        cout << "\nSolved Puzzle:\n";
        printGrid(grid);
    } else {
        cout << "\nNo solution exists!" << endl;
    }

    return 0;
}
